name: review-requested
on:
  pull_request:
    types: [review_requested]
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: us-east-1
jobs:
  review-requested:
    runs-on: ubuntu-latest
    steps:
      - name: Set URL and Token Values
        id: set-values
        run: |
          URL=$(aws ssm get-parameter --name ' /nio/development/slack_notifications/url' --with-decryption | jq -r '.Parameter.Value')
          TOKEN=$(aws ssm get-parameter --name ' /nio/development/slack_notifications/token' --with-decryption | jq -r '.Parameter.Value')

          IFS=/ read -r owner repo <<< "${{ github.repository }}"

          echo "::set-output name=token_header::X-Api-Token: ${TOKEN}"
          echo "::set-output name=full_url::${URL}notify?event_type=review_requested&${repo}"

          data_string="--pr-title \"${{ github.event.pull_request.title}}\" --pr_url \"${{ github.event.pull_request.html_url}}\" --requestor \"${{ github.event.sender.login }}\" --reviewer"
          echo "::set-output name=data_string::$data_string"


      - name: Post Review Requested to Slack - Individual Reviewer
        if: ${{ github.event.requested_reviewer }}
        run: |
          data_string="${{ steps.set-values.outputs.data_string }} \"${{ github.events.requested_reviewer.login }}\""
          curl -X POST -H "${{ steps.set-values.outputs.token_header }}" "${{ steps.set-values.outputs.full_url }}" -d "'$data_string'"

      - name: Post Review Requested to Slack - Team Reviewer
        if: ${{ github.event.requested_team }}
        run: |
          data_string="${{ steps.set-values.outputs.data_string }} \"${{ github.events.requested_team.login }}\""
          curl -X POST -H "${{ steps.set-values.outputs.token_header }}" "${{ steps.set-values.outputs.full_url }}" -d "'$data_string'"
